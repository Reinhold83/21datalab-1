<div id="cockpit" class="modal fade" role="dialog" path="" style="max-width:100%;width:600;height:auto">
    <div class="modal-dialog modal-lg" role="dialog" id="cockpitmodal">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="doublechecktitl2e"><i class="fas fa-gamepad"></i> &nbsp &nbsp Threshold Evaluation</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
              <br>
                <div class="form-group row">
                    <div class ="col-9">
                        <div class="form-check">
                          <input class="form-check-input" type="radio" name="varSelection" id="onlyVisibleVars" value="onlyVisibleVars" checked>
                          <label class="form-check-label" for="onlyVisibleVars">
                              evaluate thresholds for <b>only</b> the visible variables
                          </label>
                        </div>
                        <div class="form-check">
                          <input class="form-check-input" type="radio" name="varSelection" id="allVars" value="allVars">
                          <label class="form-check-label" for="allVars">
                              evaluate thresholds for <b>all</b> the variables (can take long)
                          </label>
                        </div>
                    </div>




                </div>
           </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="btn_eval_thresholds()">Evaluate</button>
                <button type="button" class="btn btn-primary"  data-dismiss="modal" id ="doublecheckButtonSave2">Cancel</button>
            </div>
        </div>
    <script>







var cockpiteventSource = 0;
var cockpitPath = "";
var cockpitWidgetPath = "";
var thresholds = [];
var widget = "";


function btn_eval_thresholds()
{
    //enable scores
    var query = [widget+".visibleElements"];
    http_post('/_getvalue',JSON.stringify(query), null, this, (self,status,data,params) => {
        if (status==200)
        {
            var value = JSON.parse(data)[0];
            value.scores = true;
            value.thresholds = true;

            var query = [{browsePath:widget+".visibleElements",value:value}];
            http_post("/setProperties",JSON.stringify(query),null,null,(self,status,data,params)=>
            {
                if (status==201)
                {
                    // now get the id of scorer
                    query = {"nodes":[cockpitPath+".scorer"],"resultKey":"browsePath","includeLongValues":false}
                    http_post('/_getnodes',JSON.stringify(query), null, this, (self,status,data,params) => {
                        if (status==200)
                        {
                            var value = JSON.parse(data);
                            var scorerId = value[cockpitPath+".scorer"].forwardRefs[0];
                            if ($('#onlyVisibleVars')[0].checked == true)
                            {
                                var query={"deleteExisting":true,"parent":scorerId+".variables","add":[widget+".selectedVariables"]}
                            }
                            else
                            {
                               var query={"deleteExisting":true,"parent":scorerId+".variables","add":[widget+".selectableVariables"]}
                            }
                            http_post('/_references',JSON.stringify(query), null, this, (self,status,data,params) => {
                                if (status==201)
                                {
                                    http_post("/_execute",JSON.stringify(scorerId),null,null,null);
                                }

                            });
                        }
                    });
                }
            });
        }

    });


    console.log("enable on widget"+ widget);
}


function cockpit_init(path)
{
    cockpitPath = path;
    widget = $("#cockpit").attr("widget");

}


function cockpit_close()
{

}
    </script>
    </div>
</div>